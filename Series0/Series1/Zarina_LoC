module FirstTest

import analysis::m3::Core;
import lang::java::jdt::m3::Core;
import lang::java::jdt::m3::AST;
import IO;
import List;
import String;

public loc project1 = |project://LittleJavaProject/|;
public loc project2 = |project://smallsql0.21_src/|;
public loc project3 = |project://hsqldb-2.3.1/|;

// Search and put in a list all .java files from a project.
public list[loc] getFilesFromProject(loc dir) {
  listFiles = [];
  for(str entry <- listEntries(dir)){
      loc sub = dir + entry;   
      if(isDirectory(sub)) {
          listFiles += getFilesFromProject(sub + "/");
      } else {
	      if(endsWith(entry, ".java")) { 
	         listFiles += [sub]; 
	      }
      }
  };
  return listFiles;
}

//Counts lines of codes in all files, without comments & empty lines.
public int countLineOfCodeInProject(loc project){
  list[loc] allJavaFiles = getFilesFromProject(project); 
  int count = 0;
  int countUseless = 0;
  
  for(content <- allJavaFiles){
  	list[str]fileContent = readFileLines(content);
  
   for(i <- [0..size(readFileLines(content))]){
       // Count comments & empty lines
       if(startsWith(trim(fileContent[i]), "//") ||
          startsWith(trim(fileContent[i]), "/**") || 
          startsWith(trim(fileContent[i]), "*") ||
          startsWith(trim(fileContent[i]), "*/") ||
          isEmpty(trim(fileContent[i])) ) {
        
        countUseless +=1;
       }  
     count += 1; 
   }
  }
  // total LOC minus counted lines of comments & empty lines
  return (count - countUseless);
}


// A method to print out statistics. For example: info(project2) - for smallsql.
void info(loc project) {
  printlnExp("The amount of LOC without empty lines and comments: ",countLineOfCodeInProject(project));
}
